#version 300 es

precision mediump float;

const vec3 lightPos     = vec3(100.0    , 100.0     , 100.0);
const vec3 diffuseColor = vec3(0.4      , 0.4       , 0.4);
const vec3 specColor    = vec3(0.89     , 0.95      , 0.99);

out vec4    outColor;

in vec3    vertPos;
in vec3    normalInterp;

void main()
{
    vec3 lightDir = normalize(lightPos - vertPos);

    float lambertian = max(dot(lightDir,normalInterp), 0.0);
    float specular = 0.0;

    if(lambertian > 0.0)
    {
        vec3 reflectDir   = reflect(-lightDir, normalInterp);
        vec3 viewDir      = -vertPos;

        float specAngle   = max(dot(reflectDir, viewDir), 0.0);
        specular          = pow(specAngle, 40.0);
    }

    outColor = vec4( lambertian * diffuseColor + specular * specColor, 1.0);
}

